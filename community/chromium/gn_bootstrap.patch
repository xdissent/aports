--- tools/gn/bootstrap/bootstrap.py.orig
+++ tools/gn/bootstrap/bootstrap.py
@@ -32,6 +32,7 @@
 
 is_win = sys.platform.startswith('win')
 is_linux = sys.platform.startswith('linux')
+is_gnu_linux = is_linux and platform.libc_ver()[0].startswith('glibc')
 is_mac = sys.platform.startswith('darwin')
 is_aix = sys.platform.startswith('aix')
 is_posix = is_linux or is_mac or is_aix
@@ -175,7 +176,7 @@
   mkdir_p(root_gen_dir)
 
   write_buildflag_header_manually(root_gen_dir, 'base/allocator/features.h',
-      {'USE_ALLOCATOR_SHIM': 'true' if is_linux else 'false'})
+      {'USE_ALLOCATOR_SHIM': 'true' if is_gnu_linux else 'false'})
 
   write_buildflag_header_manually(root_gen_dir, 'base/debug/debugging_flags.h',
       {
@@ -407,8 +408,6 @@
       'base/third_party/superfasthash/superfasthash.c',
   ])
   static_libraries['base']['sources'].extend([
-      'base/allocator/allocator_check.cc',
-      'base/allocator/allocator_extension.cc',
       'base/at_exit.cc',
       'base/base_paths.cc',
       'base/base_switches.cc',
@@ -458,6 +457,7 @@
       'base/metrics/bucket_ranges.cc',
       'base/metrics/field_trial.cc',
       'base/metrics/field_trial_param_associator.cc',
+      'base/metrics/field_trial_params.cc',
       'base/metrics/histogram.cc',
       'base/metrics/histogram_base.cc',
       'base/metrics/histogram_functions.cc',
@@ -507,6 +507,7 @@
       'base/task_scheduler/scheduler_lock_impl.cc',
       'base/task_scheduler/scheduler_single_thread_task_runner_manager.cc',
       'base/task_scheduler/scheduler_worker.cc',
+      'base/task_scheduler/scheduler_worker_pool.cc',
       'base/task_scheduler/scheduler_worker_pool_impl.cc',
       'base/task_scheduler/scheduler_worker_pool_params.cc',
       'base/task_scheduler/scheduler_worker_stack.cc',
@@ -522,6 +523,7 @@
       'base/third_party/dmg_fp/g_fmt.cc',
       'base/third_party/icu/icu_utf.cc',
       'base/third_party/nspr/prtime.cc',
+      'base/threading/scoped_blocking_call.cc',
       'base/threading/post_task_and_reply_impl.cc',
       'base/threading/sequence_local_storage_map.cc',
       'base/threading/sequenced_task_runner_handle.cc',
@@ -579,7 +581,6 @@
       'base/unguessable_token.cc',
       'base/value_iterators.cc',
       'base/values.cc',
-      'base/value_iterators.cc',
       'base/vlog.cc',
   ])
 
@@ -652,7 +653,6 @@
     static_libraries['base']['sources'].extend([
         'base/memory/shared_memory_handle_posix.cc',
         'base/memory/shared_memory_posix.cc',
-        'base/memory/shared_memory_tracker.cc',
         'base/nix/xdg_util.cc',
         'base/process/internal_linux.cc',
         'base/process/memory_linux.cc',
@@ -666,10 +666,11 @@
         'base/threading/platform_thread_linux.cc',
     ])
     if is_linux:
-      static_libraries['base']['sources'].extend([
-        'base/allocator/allocator_shim.cc',
-        'base/allocator/allocator_shim_default_dispatch_to_glibc.cc',
-      ])
+      if is_gnu_linux:
+        static_libraries['base']['sources'].extend([
+          'base/allocator/allocator_shim.cc',
+          'base/allocator/allocator_shim_default_dispatch_to_glibc.cc',
+        ])
       libs.extend(['-lrt', '-latomic'])
       static_libraries['libevent']['include_dirs'].extend([
           os.path.join(SRC_ROOT, 'base', 'third_party', 'libevent', 'linux')
